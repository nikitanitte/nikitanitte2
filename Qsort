#include<stdio.h>
#include<time.h>
int partition(int a[], int low, int high) {
int pivot = a[low], i = low + 1, j = high, temp;
while (1) {
while (i <= high && a[i] <= pivot) i++;
while (a[j] > pivot) j--;
if (i < j) { temp = a[i]; a[i] = a[j]; a[j] = temp; }
else { temp = a[j]; a[j] = a[low]; a[low] = temp; return j; }
}
}
void quick_sort(int a[], int low, int high) {
if (low < high) {
int j = partition(a, low, high);
quick_sort(a, low, j - 1);
quick_sort(a, j + 1, high);
}
}
int main() {
int n, a[200000];
double clk;
clock_t start, end;
printf("Enter number of records: ");
scanf("%d", &n); // Input number of records
printf("Enter the records:\n");
for (int i = 0; i < n; i++) scanf("%d", &a[i]); // Input records
start = clock();
quick_sort(a, 0, n - 1);
end = clock();
printf("\nSorted records: ");
for (int i = 0; i < n; i++) printf("%d ", a[i]); // Print sorted 
records
clk = (double)(end - start) / CLOCKS_PER_SEC;
printf("\nRun time: %f sec\n", clk);
return 0;
}
